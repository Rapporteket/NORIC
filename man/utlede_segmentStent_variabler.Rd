% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utlede_segmentStent_variabler.R
\name{utlede_segmentStent_variabler}
\alias{utlede_segmentStent_variabler}
\alias{legg_til_antall_stent}
\alias{utlede_kar_segment_stent}
\alias{utlede_kar_graft_segment_stent}
\alias{legg_til_pci_per_kar}
\title{New variables from NORIC's SementStent-table}
\usage{
legg_til_antall_stent(df_ap, df_ss)

utlede_kar_segment_stent(df_ss)

utlede_kar_graft_segment_stent(df_ss)

legg_til_pci_per_kar(df_ap, df_ss)
}
\arguments{
\item{df_ap}{NORICS's \emph{AngioPCIVar}-table. Must contain the variables
\code{AvdRESH} and \code{ForlopsID}.}

\item{df_ss}{NORICS's \emph{SegmentStent}-table. Must contain the variables
\code{AvdRESH} and \code{ForlopsID}. Additionally, the variable
\code{StentType} is mandatory in the function \code{legg_til_antall_stent()}
and the variables \code{Segment}, \code{Graft} and \code{ProsedyreType} are
mandatory in the functions \code{utlede_kar_segment_stent},
\code{utlede_kar_graft_segment_stent} and \code{legg_til_pci_per_kar()}.}
}
\description{
Functions for creating variables based on NORIC's \emph{SegmentStent}-table
and for merging these variables into NORIC's \emph{AngioPCIVar}-table by key
variables \code{ForlopsID} and \code{AvdRESH}.
}
\details{
The function \code{legg_til_antall_stent()} counts the number of non-missing
stent-types for each procedure in \code{df_ss}. The variable
 \code{antall_stent} is then added in \code{df_ap} before \code{df_ap} is
 returned. For procedures with no entries in \code{df_ss},
 \code{antall_stent} has the value <NA>.

The function \code{utlede_kar_segment_stent()} groups the
\code{Segments} in \code{df_ss} into coronary arteries in the new variable
\code{kar}, then \code{df_ss} is returned from the function.

The function \code{utlede_kar_graft_segment_stent()} groups the
\code{Segments} and \code{Grafts} in \code{df_ss} into coronary arteries
and/or grafts in the new variable \code{kar_graft}, then \code{df_ss} is
returned from the function.

The function \code{legg_til_pci_per_kar()} uses the data in \code{df_ss} to
calculate 10 new variables, all prefixed by \code{PCI_} and suffixed by level
of \code{kar_graft} (examples: \code{PCI_LAD}, \code{PCI_CX}, \code{PCI_CX_veneGraft},
\code{PCI_CX_arterieGraft}). The variables indicates whether or not a PCI is performed in each
\code{kar_graft}. If at least one PCI is done in a \code{kar_graft} the value
of the corresponding variable is \emph{ja}, otherwise the value is
\emph{nei}. These 10 variables are then merged into \code{df_ap}, before
\code{df_ap} is returned from the function. For procedures where no PCIs are
done on segment-level (e.g. no entries available in \code{df_ss}), the values
for the 10 new variables are <NA>. Procedures of type \emph{wireforsoek} are
not counted.
}
\examples{
df_ap <- data.frame(ForlopsID = 1:5,
                    AvdRESH = rep(1,5))
df_ss <- data.frame(
  ForlopsID = c(1, 3, 3, 3, 5, 5),
  AvdRESH = rep(1,6),
  Segment = 1:6,
  StentType = c("DES",
                "BMS", "DES", "Annet",
                NA, NA))
legg_til_antall_stent(df_ap = df_ap, df_ss = df_ss)

df_ss <- data.frame(ForlopsID = 1:23,
                    AvdRESH = rep(1,23),
                    Segment = c(1:20, 1:3),
                    Graft=c(rep("Nei", 20), "Arteriell", "Vene", NA))
utlede_kar_segment_stent(df_ss)
utlede_kar_graft_segment_stent(df_ss)


df_ss <- data.frame(ForlopsID = c(1,2,3,3,3),
                    AvdRESH = rep(1,5),
                    Segment = c(1,5,10,12,13),
                    Graft = c(rep("Nei", 3),
                              rep("Arteriell", 1),
                              rep("Vene", 1)),
                    ProsedyreType = c("Ballong + Stent",
                                      "WireforsÃ¸k",
                                      "Rotablator",
                                      "WireforsÃ¸k",
                                      "Direktestent"))
legg_til_pci_per_kar(df_ap = df_ap, df_ss = df_ss)
}
