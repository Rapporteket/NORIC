% knitr::knit2pdf("NORIC_local_monthly_stent.Rnw")

\documentclass[presentation,xcolor=pdftex,dvipsnames,table]{beamer}
\usetheme{Hannover}
\usecolortheme{seagull}

%\usepackage[absolute,overlay]{textpos}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[english, norsk]{babel}
\usepackage{xspace}
\usepackage{booktabs}
\usepackage{rotating}


<<knitrOptions,include=FALSE>>=


knitr::opts_chunk$set(warnings=FALSE,echo=FALSE)
options(stringsAsFactors=FALSE , width = "130")

## START to be deleted
# In future, rapbase will take care of the following:
# make sure processing takes place "here" (sessions getwd())
knitr::opts_knit$set(root.dir='./')
# make sure we do not make figure folder
knitr::opts_chunk$set(fig.path='')
## END to be deleted

@



<<SKDEcol,include=FALSE>>=
colPrimary <- c("#000059", "#084594", "#2171b5", "#4292c6", "#6baed6", "#c6dbef")
colNeutral <- c("#4D4D4D", "#737373", "#A6A6A6", "#DADADA")
colKontrast <- "#FF7260"
@ 


<<DefineFunc,include=FALSE>>=

brew <- function(
    N = 3 ,
    alpha = "AA" ) paste(
        RColorBrewer::brewer.pal(
            n = N , 
            name = if(N<9) "Dark2" else "Set3" ) ,
        alpha ,
        sep = "")

PrettyTabNR <- function( TabN ) {
    TabR <- round(
        100*prop.table(
                TabN ,
                margin = 1 ) ,
        digits = 1 )
    N <- sprintf( "%3.0f" , TabN )
    R <- sprintf( "%4.1f" , TabR )
    T <- paste( R , " (" , N , ")" , sep = "" )
    Tab <- matrix(
        data = T ,
        ncol = ncol(TabN) ,
        byrow = FALSE )
    Tab[ which(Tab==" 0.0 (  0)") ] <- ""
    rownames(Tab) <- rownames(TabN)
    colnames(Tab) <- colnames(TabN)
    return(Tab)
}

PrettyTabN <- function( TabN ) {
    Tab <- sprintf( "%3.0f" , TabN )
    Tab[ which(Tab=="  0") ] <- ""
    return(Tab)
}

PrettyTabR <- function( TabN ) {
    R <- round(
        100*prop.table(
                TabN ,
                margin = 1 ) ,
        digits = 1 )
    R <- sprintf( "%4.1f" , R )
    R[ which( R == " 0.0" ) ] <- ""
    Tab <- matrix(
        data = R ,
        ncol = ncol(TabN) ,
        byrow = FALSE )
    rownames(Tab) <- rownames(TabN)
    colnames(Tab) <- colnames(TabN)
    return(Tab)
}


showN <- 18

@ 


<<GetData,include=FALSE>>=

baseName <- "noricStaging"
reshID <- rapbase::getUserReshId()

registryName <- if (exists("reshID")){
                    NORICmakeRegistryName(baseName, reshID)
                } else {
                    "rapbase"
                }

dbType <- "mysql"

SSQuery <- "SELECT * FROM SegmentStent"
SS <- rapbase::LoadRegData(registryName, SSQuery, dbType)

APQuery <- "
SELECT
   A.ForlopsID ,
   min(A.Sykehusnavn) AS Sykehusnavn ,
   min(A.ProsedyreDato) AS ProsedyreDato ,
   SUM(S.ForlopsID>0) AS Nstents
FROM AngioPCIVar A
LEFT JOIN SegmentStent S
ON A.ForlopsID=S.ForlopsID AND S.StentType <> ''
WHERE A.ProsedyreType  != 'Angio'
GROUP BY ForlopsID;
"

AP <- rapbase::LoadRegData(registryName, APQuery, dbType)


AP$Nstents[ is.na(AP$Nstents) ] <- 0

SS$StentType[SS$StentType==""] <- NA
SS$StentType[SS$StentType=="Annet"] <- "BVS"
SS$StentType <- factor(SS$StentType)

SS$Indikasjon <- car::recode( SS$Indikasjon ,"
   'Stabil koronarsykdom '                    ='SAP';
   'UAP'                                      ='UAP';
   'NSTEMI'                                   ='NSTEMI';
   'STEMI'                                    ='STEMI';
   'STEMI > 24h'                              ='STEMI';
   'STEMI/Rescue PCI'                         ='STEMI';
   ''                                         = NA;
   else                                       ='Annet'
")
 
SS$Indikasjon <- factor( SS$Indikasjon , levels = c(
'SAP',
'UAP',
'NSTEMI',
'STEMI',
'Annet'))


SS$ProsedyreType2 <- car::recode( SS$ProsedyreType , "
    'Direktestent' = 'Stent' ;
    'Ballong + Stent' = 'Stent' ;
    'Medikamentell ballong+ Stent' = 'Stent' ;

    'Ballongdilatasjon' = 'POBA' ;

    'Wireforsøk' = 'Wireforsøk' ;

    'Rotablator' = 'Rotablator' ;

    else = 'Annet'")

SS$ProsedyreDato <- as.Date(
    x = SS$ProsedyreDato ,
    format = "%Y-%m-%d")

SS$Month <- as.numeric(
    format( 
        x = SS$ProsedyreDato , 
        format = "%m" ))

SS$Year <- as.numeric(
    format( 
        x = SS$ProsedyreDato ,
        format = "%y" ))

SS$YearMonth <- factor(
    format(
        x = SS$ProsedyreDato ,
        format = "%y-%m"))



AP$ProsedyreDato <- as.Date(
    x = AP$ProsedyreDato ,
    format = "%Y-%m-%d")
                       
AP$Month <- as.numeric(
    format( 
        x = AP$ProsedyreDato , 
        format = "%m" ))

                         
AP$Year <- as.numeric(
    format( 
        x = AP$ProsedyreDato ,
        format = "%y" ))

AP$YearMonth <- factor(
    format(
        x = AP$ProsedyreDato ,
        format = "%y-%m"))

PCImedStent <- subset(
    AP ,
    Nstents > 0
    )
@ 

<<getHospitalNameFromData, include=FALSE>>=
hospitalName <- AP$Sykehusnavn[1]
@

<<PrintTitle,echo=FALSE,results='asis'>>=
cat("\\title{NORIC" , hospitalName , "\\\\Stentbruk}\n\n")
cat("\\date{" , date() , "}\n\n")
@ 

\begin{document}
\SweaveOpts{concordance=TRUE}
\begin{tiny}
  
\maketitle



\section{Stent type}

\begin{frame}[fragile]
  
<<N_stents_StentType_YearMonth,fig.cap="Antall stenter etter type og måned",fig.width=12,fig.height=8,out.width="4in",echo=FALSE>>=

op <- par(
    mfcol = c (1,1) ,
    xpd = NA ,
    mar = c(5.1,4.1,4.1,13.1) ,
    bg = "#EEEEEE")

pal <- colPrimary[c(1,3,5)]

barplot(
    xtabs(
        formula = ~ StentType + YearMonth ,
        subset = StentType != "" ,
        data = SS ) , 
    las = 1 ,
    xlab = "Måned" ,
    ylab = "Antall" ,
    col = pal ,
    space = 0.2 ,
    border = FALSE)

legend(
    "right" ,
    inset = -.28 ,
    bty = "n" ,
    horiz = FALSE ,
    fill = pal,
    legend = levels(SS$StentType) ,
    cex = 1)
@

\end{frame}



\begin{frame}[fragile]
<<Antall_stenter_etter_type_og_maned,echo=FALSE,results='asis'>>=

TabNStentType <- tail(
    xtabs(
        formula = ~ YearMonth + StentType ,
        data = SS ) ,
    n = showN )

print(
    xtable::xtable(
        addmargins( TabNStentType ) ,
        digits = 0 , caption = "Antall stenter etter type og måned") ,
    booktabs = TRUE ,
    rotate.colnames = FALSE)

@
\end{frame}



\begin{frame}[fragile]
<<Prosent_stenttyper_etter_maned,echo = FALSE , results='asis'>>=

print(
    xtable::xtable(
        100 * prop.table(
            addmargins(
                TabNStentType ,
                margin = 1
            ) ,
            margin = 1
            ) ,
        digits = 1 , caption = "Prosentandel stenter etter typer og måned"
        ) ,
    booktabs = TRUE ,
    rotate.colnames = FALSE
)

@
\end{frame}




\section{Prosedyre type}

\begin{frame}[fragile]
<<TabNRProsedyreType,echo=FALSE,results='asis'>>=

TabNProsedyreType <- tail(
    xtabs(
        formula = ~ YearMonth + ProsedyreType2 ,
        data = SS
    ) ,
    n = showN+1
)

print(
    xtable::xtable(
                x = PrettyTabNR( TabNProsedyreType ) ,
                digits = 0 , caption = "Prosent (antall) behandlete segmenter etter prosedyretype og måned"
               ) ,
    booktabs = TRUE ,
    rotate.colnames = FALSE)

@
\end{frame}




\section{Stenter per prosedyre}

\begin{frame}[fragile]
  \frametitle{Antall stenter per prosedyre}
  \framesubtitle{ \Sexpr{ paste0( range(PCImedStent$ProsedyreDato) , collapse = " til ") }, min. 1 stent (N = \Sexpr{ sum(PCImedStent$Nstents>0) })}
<<Barplot_Nstent_per_Prosedyre,fig.width=12,fig.height=8,out.width="4in",echo=FALSE>>=

op <- par(
    mfcol = c (1,1) ,
    xpd = NA ,
    mar = c(5.1,4.1,4.1,13.1) ,
    bg = "#EEEEEE")


TabNStent <- xtabs(
    formula = ~ Nstents ,
    data = PCImedStent )

barplot(
    TabNStent ,
    ylab = "Antall prosedyrer" ,
    border = NA ,
    col = colPrimary[3] )

S <- round( summary(PCImedStent$Nstents) , 1 )

legend(
    "right" ,
    inset = -.28 ,
    bty = "n" ,
    legend = paste(attr(S,"names"), ": " , S , sep = ""))

@ 
\end{frame}





\section{Stent merke}

<<prepare-data-SS-pci,include=FALSE>>=

SSpci <- subset(
    SS ,
    ProsedyreType %in% c("Ballong + Stent","Direktestent","Medikamentell ballong+ Stent")
)

# get an overall percentage 
Nname <- sort( table(SSpci$Stentnavn) , decreasing = TRUE ) / length(SSpci$Stentnavn)
# exclude those used in less then 1% of cases
Nname <- Nname[ which(Nname>0.01)]

SSpci$Name3 <- factor(
    x = SSpci$Stentnavn , 
    levels = names(Nname)
    )

@ 


\begin{frame}[fragile]
<<TabNstentNameMonth,echo=FALSE,results='asis'>>=

TabNStentMerke <- tail(
    xtabs(
        formula = ~ YearMonth + Name3 ,
        data = SSpci ) ,
    n = showN )

print(
    xtable::xtable(
        x = addmargins(TabNStentMerke) ,
        digits = 0 , caption = "Antall stenter etter merke og måned") ,
    booktabs = TRUE ,
    rotate.colnames = TRUE,
    scalebox = 0.8)

@
\end{frame}



\begin{frame}[fragile]
<<TabRstentNameMonth,echo=FALSE,results='asis'>>=

print(
    xtable::xtable(
        x = PrettyTabR( TabNStentMerke ) ,
        digits = 0 , caption = "Prosent andel stenter etter merke og måned") ,
    booktabs = TRUE ,
    rotate.colnames = TRUE,
    scalebox = 0.8)

@
\end{frame}



\end{tiny}
\end{document}

