\documentclass[presentation,xcolor=pdftex,dvipsnames,table]{beamer}

\usetheme{Hannover}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[english]{babel}
\usepackage[absolute,overlay]{textpos}
\usepackage{xspace}
\usepackage{booktabs}
\usepackage{rotating}
\usepackage{graphicx}



<<TestConfig,include=FALSE,eval=FALSE>>=
knitr::knit2pdf( "NORIC_local_monthly_time2treatment.Rnw" )
@ 


<<LoadLibsAndFuncs,include=FALSE>>=

options(stringsAsFactors=FALSE , width = "130")

require( ggplot2 )
require( quantreg )
require( Hmisc )
require( xtable )

source( "../qTimeGAM.R")

Tquantil <- function( x , probs )
    round(
        quantile( x = x , na.rm = TRUE , probs = probs ) ,
        digits = 1)

describe <- function(X){
    DTAB <- c(
        as.character(sum(!is.na(X))) ,
        round( mean( X , na.rm = TRUE ) , digits = 1 ) ,
        min( X , na.rm = TRUE ) ,
        max( X , na.rm = TRUE ) ,
        Tquantil( X , 0.100 ) ,
        Tquantil( X , 0.250 ) ,
        Tquantil( X , 0.500 ) ,
        Tquantil( X , 0.750 ) ,
        Tquantil( X , 0.900 ))
        attr( DTAB , "names") <- c(
            "N" , "Mean", "Minimum", "Maximum",
            "10%", "25%", "50%", "75%", "90%")
        return(DTAB)}
@ 





<<DBconnect,include=FALSE>>=

if (!exists("con")) {
    conf <- yaml::yaml.load_file(
        input = "../dbConfig.yml" )[["noricStagingNasjonal"]]
    con <- DBI::dbConnect(
        drv = RMySQL::MySQL() ,
        dbname = unlist( conf["name"] ) ,
        host = unlist( conf["host"]) ,
        user = unlist( conf["user"]) ,
        password = unlist( conf["pass"])
        )
    options( stringsAsFactors = FALSE )
    DBI::dbGetQuery( con , "SET NAMES utf8;" )}

@ 


<<getData,include=FALSE>>=

AP <- DBI::dbGetQuery(
    conn = con , 
#    statement = "SELECT * FROM Time2Treatment20151202")
    statement = "SELECT * FROM AngioPCIVar")

# clean up and close
con <- DBI::dbDisconnect(con)
rm(con)
@ 



<<RecodeVars,include=FALSE>>=

AP$Sykehusnavn <- gsub( "Ã¸" , "ø" , AP$Sykehusnavn )
AP$Sykehusnavn <- gsub( "Ã¥" , "å" , AP$Sykehusnavn )

AP$OverflyttetFraSykehus <- gsub( "Ã…" , "Å" , AP$OverflyttetFraSykehus )
AP$OverflyttetFraSykehus <- gsub( "Ã¥" , "å" , AP$OverflyttetFraSykehus )
AP$OverflyttetFraSykehus <- gsub( "Ã¦" , "æ" , AP$OverflyttetFraSykehus )
AP$OverflyttetFraSykehus <- gsub( "Ã˜" , "Ø" , AP$OverflyttetFraSykehus )
AP$OverflyttetFraSykehus <- gsub( "Ã¸" , "ø" , AP$OverflyttetFraSykehus )

AP$OverflyttetFraSykehus[ AP$OverflyttetFraSykehus == "" ] <- "Direkte innlagt"

AP$OverflyttetFraSykehus <- factor( AP$OverflyttetFraSykehus )


AP$OverflyttetFra <- gsub( "Ã¥" , "å" , AP$OverflyttetFra )

AP$HenvisningsStatus <- car::recode(
    var = AP$OverflyttetFra ,
    recodes = "
'Nei, direkte inn til dette sykehus' = 'Direkte innlagt';
'Omdirigert ambulanse' = 'Direkte innlagt';
'Annet sykehus'='Overflyttet';
'' = NA;
'Annen  avdeling på sykehuset' = NA;
")

AP$Indikasjon2 <- factor(
    car::recode(
        var = AP$Indikasjon ,
        recodes = "
            'Stabil koronarsykdom '='SAP';
            'UAP'='UAP';
            'NSTEMI'='NSTEMI';
            'STEMI'='STEMI';
            'Hjertestans ved STEMI'='STEMI';
            'STEMI > 24h'='STEMI';
            'STEMI/Rescue PCI'='STEMI';
            ' Uklare brystsmerter'='Uklare brystsmerter';
            else='Annet';
            ") ,
    levels = c("Uklare brystsmerter","SAP","UAP","NSTEMI","STEMI","Annet") )

@ 


<<AsDateConversion,include=FALSE>>=
AP$AnkomstPCIDato <- as.Date(
    AP$AnkomstPCIDato )

AP$InnleggelseHenvisendeSykehusDato <- as.Date(
    AP$InnleggelseHenvisendeSykehusDato )

i.direct <- which(AP$HenvisningsStatus == "Direkte innlagt")
AP$InnleggelseHenvisendeSykehusDato[ i.direct ] <- AP$AnkomstPCIDato[ i.direct ]

AP$ProsedyreDato <- as.Date(
    x = AP$ProsedyreDato)
@ 



<<CalcDays,include=FALSE>>=

AP$DaysFromIndexAdmissionToProcedure <- as.numeric(
    AP$ProsedyreDato - AP$InnleggelseHenvisendeSykehusDato )

AP$DaysFromPCIcenterAdmissionToProcedure <- as.numeric(
    AP$ProsedyreDato - AP$AnkomstPCIDato )

@ 


<<TnegNA,include=FALSE>>=
 # Exclude false registrations
AP <- AP[ - which(
    AP$DaysFromIndexAdmissionToProcedure < 0 ),]

AP <- AP[ - which(
    AP$DaysFromPCIcenterAdmissionToProcedure < 0 ),]

AP <- AP[ - which(
    AP$DaysFromIndexAdmissionToProcedure > 100 ),]

AP <- AP[ - which(
    AP$DaysFromPCIcenterAdmissionToProcedure > 100 ),]
@ 


<<filtering,include=FALSE>>=
 # All records from 2015,
 # exclude Rikshospitalet and Feiring from 2014,
 # exclude false records with hosptialization date before 2013 (~ 5).

AP <- subset(
    x = AP ,
    subset =
        ( ProsedyreDato >= as.Date("2015-01-01" ) |
             (
                 (ProsedyreDato >= as.Date("2014-01-01")) &
                     (Sykehusnavn %in% c("Stavanger","Ullevål","Sørlandet","St. Olavs","UNN","Haukeland")))))

@ 



<<MainTimeLine,include=FALSE>>=

AP$Year <- as.numeric(
    format(
        x = AP$ProsedyreDato ,
        format = "%Y"))
AP$Month <- as.factor(
    format(
        x = AP$ProsedyreDato ,
        format = "%y/%m"))
AP$Day <- as.numeric(
    AP$ProsedyreDato - min( AP$ProsedyreDato , na.rm = TRUE ) )

@ 


<<subsetting,include=FALSE>>=

NSTEMI <- subset(
    x = AP ,
    subset = (Indikasjon == "NSTEMI") &
        is.na(PrimaerForlopsID))

HUSNSTEMI <- subset(
    x = AP ,
    subset = (Indikasjon == "NSTEMI") &
        is.na(PrimaerForlopsID) &
        (Sykehusnavn == "Haukeland"))
HUSNSTEMI$OverflyttetFraSykehus <- factor(HUSNSTEMI$OverflyttetFraSykehus)

@ 





\title{NORIC Ventetider}
\date{}


\begin{document}
\begin{tiny}

\maketitle


\begin{frame}
  \begin{itemize}
    \item{Ventetid NSTEMI - Tid fra index innleggelse til prosedyre}
    \item{missing data ekskludert og NA <- 0}
    \item{ekskludert overført fra samme sykehus (mye komorbiditet)}
    \item{Data 2015 for alle nasjonale PCI sykehus}
    \item{Data 2014 for Haukeland, Sørlandet, Ullevål, UNN}
  \end{itemize}
\end{frame}


\section{NSTEMI}
\begin{frame}
  \huge{NSTEMI}
\end{frame}


\begin{frame}[fragile]
<<FigT2TSykehusStatus,warning=FALSE,echo=FALSE,fig.height=12,fig.width=19.4,out.width="4in",fig.cap="Dager fra indeks innleggelse til prosdyre for NSTEMI pasienter etter henvisnings status og PCI sykehus">>=

ggplot(
    data = NSTEMI ,
    mapping = aes(
        x = DaysFromIndexAdmissionToProcedure ,
        group = HenvisningsStatus )) +
            facet_grid( facets = Year ~ Sykehusnavn ) +
            geom_density(
                mapping = aes( fill = HenvisningsStatus ) ,
                alpha = 0.4 ,
                adjust = 2) +
            scale_x_continuous(
                limit = c(0,10) ,
                breaks = 0:5*2 ,
                name = "Dager fra indeks innleggelse til prosedyre" )

@ 
\end{frame}




\begin{frame}[fragile]
<<FigT2TSykehusAar,warning=FALSE,echo=FALSE,fig.height=6,fig.width=9.7,out.width="4in",fig.cap="Dager fra indeks innleggelse til prosdyre for NSTEMI pasienter etter PCI sykehus og år">>=
ggplot(
    data = NSTEMI ,
    mapping = aes(
        x = DaysFromIndexAdmissionToProcedure ,
        group = Sykehusnavn )) +
            facet_grid( facets = . ~ Year ) +
            geom_density(
                mapping = aes( fill = Sykehusnavn ) ,
                alpha = 0.4 ,
                adjust = 2) +
            scale_x_continuous(
                limits = c(0,10) ,
                breaks = 0:5*2 ,
                name = "Dager fra indeks innleggelse til prosedyre" )
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{NSTEMI 2014}
  \begin{table}
    \caption{Dager ventetid fra indeks innleggelse til prosedyre for NSTEMI pasienter etter PCI senter i 2014}
    \centering
    \resizebox{\textwidth}{!}{
<<T2Ttable2014, results = 'asis' , echo = FALSE>>=
Hmisc::latex(
    object = as.data.frame(
        lapply(
            X = split(
                x = NSTEMI$DaysFromIndexAdmissionToProcedure[NSTEMI$Year==2014] ,
                f = NSTEMI$Sykehusnavn[NSTEMI$Year==2014] ) ,
            FUN = describe)) ,
    booktabs = TRUE,
    center = "none",
    table.env = FALSE ,
    title = "",
    file = "")
@
}
  \end{table}
\end{frame}



\begin{frame}[fragile]
  \frametitle{NSTEMI 2015}
  \begin{table}
    \caption{Dager ventetid fra indeks innleggelse til prosedyre for NSTEMI pasienter etter PCI senter i 2015}
    \centering
    \resizebox{\textwidth}{!}{
<<T2Ttable2015, results = 'asis' , echo = FALSE>>=
Hmisc::latex(
    object = as.data.frame(
        lapply(
            X = split(
                x = NSTEMI$DaysFromIndexAdmissionToProcedure[NSTEMI$Year==2015] ,
                f = NSTEMI$Sykehusnavn[NSTEMI$Year==2015] ) ,
            FUN = describe)) ,
    booktabs = TRUE,
    center = "none",
    table.env = FALSE ,
    title = "",
    file = "")
@
}
  \end{table}
\end{frame}



\begin{frame}[fragile]
  \frametitle{Ventetid NSTEMI 2014-2015}
  \begin{table}
    \caption{Dager ventetid fra indeks innleggelse til prosedyre for NSTEMI pasienter etter PCI senter}
    \centering
    \resizebox{\textwidth}{!}{
<<T2TtableA, results = 'asis' , echo = FALSE>>=
Hmisc::latex(
    object = as.data.frame(
        lapply(
            X = split(
                x = NSTEMI$DaysFromIndexAdmissionToProcedure ,
                f = NSTEMI$Sykehusnavn ) ,
            FUN = describe)) ,
    booktabs = TRUE,
    center = "none",
    table.env = FALSE ,
    title = "",
    file = "")
@
}
  \end{table}
\end{frame}



\begin{frame}[fragile]
<<FigT2Trefer,warning=FALSE,echo=FALSE,fig.height=18,fig.width=29.1,out.width="4in",fig.cap="Dager fra indeks innleggelse til prosedyre for NSTEMI pasienter etter PCI sykehus og henvisende Sykehus">>=
ggplot(
    data = NSTEMI ,
    mapping = aes(
        x = DaysFromIndexAdmissionToProcedure ,
        group = OverflyttetFraSykehus )) +
            facet_grid( facets = Year ~ Sykehusnavn ) +
            geom_density(
                mapping = aes( fill = OverflyttetFraSykehus ) ,
                alpha = 0.4 ,
                adjust = 2) +
            scale_x_continuous(
                limits = c(0,14) ,
                name = "Dager fra indeks innleggelse til prosedyre" )

@ 
\end{frame}



\subsection{Haukeland}
\begin{frame}
  \huge{NSTEMI Haukeland}
\end{frame}


\begin{frame}[fragile]
<<FigT2TreferBergen,warning=FALSE,echo=FALSE,fig.height=12,fig.width=19.4,out.width="4in",fig.cap="Dager fra indeks innleggelse til prosedyre for NSTEMI pasienter ved Haukeland universitetssykehus">>=

ggplot(
    data = HUSNSTEMI ,
    mapping = aes(
        x = DaysFromIndexAdmissionToProcedure ,
        group = OverflyttetFraSykehus )) +
            facet_grid( facets = . ~ Year ) +
            geom_density(
                mapping = aes( fill = OverflyttetFraSykehus ) ,
                alpha = 0.4 ,
                adjust = 2) +
            scale_x_continuous(
                limits = c(0,14),
                name = "Dager fra indeks innleggelse til prosedyre" )

@ 
\end{frame}


\begin{frame}[fragile]
\begin{table}
  \caption{Dager ventetid fra indeks innleggelse til prosedyre etter henvisende sykehus for NSTEMI pasienter ved Haukeland universitetssykehus}
  \centering
  \resizebox{\textwidth}{!}{
<<TableT2TreferingBergen, results = 'asis' , echo = FALSE , warning = FALSE>>=

T14 <- as.data.frame(
    lapply(
        X = split(
            x = HUSNSTEMI$DaysFromIndexAdmissionToProcedure[HUSNSTEMI$Year==2014] ,
            f = HUSNSTEMI$OverflyttetFraSykehus[HUSNSTEMI$Year==2014] ) ,
        FUN = describe))

T15 <- as.data.frame(
    lapply(
        X = split(
            x = HUSNSTEMI$DaysFromIndexAdmissionToProcedure[HUSNSTEMI$Year==2015] ,
            f = HUSNSTEMI$OverflyttetFraSykehus[HUSNSTEMI$Year==2015] ) ,
        FUN = describe))

TableT2TreferingBergen <- rbind( T14 , T15 )
names( TableT2TreferingBergen ) <- levels(HUSNSTEMI$OverflyttetFraSykehus)

Hmisc::latex(
    object = TableT2TreferingBergen ,
    booktabs = TRUE,
    center = "none",
    table.env = FALSE ,
    rgroup = c("2014","2015") ,
    n.rgroup = c(9,9) ,
#    rowname = rownames(T14) ,
    title = "",
    file = "")

@
} \end{table}
\end{frame}


\begin{frame}[fragile]
<<BoxplotT2TbyPdateHUS,echo=FALSE,fig.height=10,fig.width=16.2,out.width="4in",fig.cap="Dager fra indeks innleggelse til prosedyre etter prosedyremåned for NSTEMI pasienter ved Haukeland universitetssykehus">>=

boxplot(
    DaysFromIndexAdmissionToProcedure ~ Month ,
    data = HUSNSTEMI ,
    varwidth = TRUE ,
    col = "#84848433" ,
    ylim = c(0,12) ,
    ylab = "Dager" ,
    xlab = "Måned")

abline(
    h = 3 ,
    lwd = 2 ,
    col = "#FF000055")

@ 
\end{frame}



\begin{frame}[fragile]
<<BoxplotT2TbyPdateDirekteHUS,echo=FALSE,fig.height=10,fig.width=16.2,out.width="4in",fig.cap="Dager fra indeks innleggelse til prosedyre etter prosedyremåned for NSTEMI pasienter \\emph{direkte innlagt} ved Haukeland universitetssykehus">>=

boxplot(
    DaysFromIndexAdmissionToProcedure ~ Month ,
    data = HUSNSTEMI ,
    subset = HenvisningsStatus == "Direkte innlagt" ,
    varwidth = TRUE ,
    col = "#84848433" ,
    ylim = c(0,12) ,
    ylab = "Dager" ,
    xlab = "Måned")

abline(
    h = 3 ,
    lwd = 2 ,
    col = "#FF000055")

@ 
\end{frame}



\begin{frame}[fragile]
<<BoxplotT2TbyPdateOverflyttetHUS,echo=FALSE,fig.height=10,fig.width=16.2,out.width="4in",fig.cap="Dager fra indeks innleggelse til prosedyre etter prosedyremåned for NSTEMI pasienter \\emph{overflyttet} til Haukeland universitetssykehus">>=
# 1.168

boxplot(
    DaysFromIndexAdmissionToProcedure ~ Month ,
    data = HUSNSTEMI ,
    subset = HenvisningsStatus == "Overflyttet" ,
    varwidth = TRUE ,
    col = "#84848433" ,
    ylim = c(0,12) ,
    ylab = "Dager" ,
    xlab = "Måned")

abline(
    h = 3 ,
    lwd = 2 ,
    col = "#FF000055")

@ 
\end{frame}



\begin{frame}[fragile]
<<GAMplotT2TbyPdateHUS,echo=FALSE,fig.height=10,fig.width=16.2,out.width="4in",fig.cap="Dager fra indeks innleggelse til prosedyre etter prosedyremåned for NSTEMI pasienter ved Haukeland universitetssykehus. Grønne linjer representerer 25-, 50- og 75-prosentiler av ventedager for pasienter estimert med en additive kvantil regresjons modell. Grønn skygge rundt linjene viser 95\\% konfidens intervall.">>=

qTimeGAM(
    data = HUSNSTEMI )

@ 
\end{frame}






\section{Alle indikasjoner}
\begin{frame}
  \huge{Alle indikasjoner}
  \tiny{akutte og subakkute forløp}
\end{frame}


\begin{frame}[fragile]
<<FigT2TetterIndikasjon,fig.cap="Fordeling av ventetid fra indeks innleggelse til prosedyre etter indikasjon for akutte og subakutte hendelser", fig.height = 6, fig.width = 9.7, out.width = "\\textwidth", warning = FALSE, echo = FALSE>>=
ggplot(
    data = AP ,
    mapping = aes(
        x = DaysFromIndexAdmissionToProcedure ,
        group = Indikasjon2 )) +
            geom_density(
                mapping = aes( fill = Indikasjon2 ) ,
                alpha = 0.4 ,
                adjust = 2) +
            scale_x_continuous(
                limits = c(0,15) ,
                breaks = 0:7*2 ,
                name = "Dager fra indeks innleggelse til prosedyre")
   #        ...: common continuous scale parameters: ‘name’, ‘breaks’,
   #             ‘labels’, ‘na.value’, ‘limits’ and ‘trans’.  See
   #             ‘continuous_scale’ for more details
@ 
\end{frame}


\begin{frame}[fragile]
\begin{table}
  \caption{Dager ventetid fra indeks innleggelse til prosedyre etter indikasjon for akutte og subakutte hendelser}
  \centering
  \resizebox{\textwidth}{!}{
<<T2Ttable, results = 'asis' , echo = FALSE , warning = FALSE>>=
Hmisc::latex(
    as.data.frame(
        lapply(
            X = split(
                x = AP$DaysFromIndexAdmissionToProcedure ,
                f = AP$Indikasjon2 ) ,
            FUN = describe)) ,
    booktabs = TRUE,
    center = "none",
    table.env = FALSE ,
    title = "",
    file = "")
@
}\end{table}
\end{frame}



\end{tiny}
\end{document}
